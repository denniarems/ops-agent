# Production Caddyfile for ZapGap Application
# Configured for api.zapgap.tech with CORS support

{
    # Global options
    admin off

    # Enable access logs
    log {
        output stdout
        format console
        level INFO
    }
}

# Production HTTPS configuration for API server
api.zapgap.tech {
    # Enable request logging
    log {
        output stdout
        format console
    }

    # Production security headers with CORS
    header {
        # HSTS with preload
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"

        # Content security
        X-Content-Type-Options "nosniff"
        X-Frame-Options "DENY"
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"

        # Content Security Policy (adjust as needed for your app)
        Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'none';"

        # Remove server information
        -Server

        # CORS headers for production
        Access-Control-Allow-Origin "https://zapgap.tech"
        Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
        Access-Control-Allow-Headers "Content-Type, Authorization, X-User-ID, X-User-Tier, X-Language, X-AWS-Access-Key-ID, X-AWS-Secret-Access-Key, X-AWS-Region"
        Access-Control-Allow-Credentials "false"

        # Additional security headers (modified for CORS compatibility)
        Permissions-Policy "geolocation=(), microphone=(), camera=()"
        Cross-Origin-Embedder-Policy "require-corp"
        Cross-Origin-Opener-Policy "same-origin"
        # Removed Cross-Origin-Resource-Policy to allow cross-origin requests
    }

    # Handle preflight requests
    @options {
        method OPTIONS
    }
    respond @options 204

    # Health check endpoint
    handle /health {
        respond "OK" 200
    }

    # API routes with higher timeout
    handle /api/* {
        reverse_proxy server:3000 {
            # Health check for upstream
            health_uri /health
            health_interval 30s
            health_timeout 10s

            # Headers to pass through
            header_up Host {upstream_hostport}
            header_up X-Real-IP {remote_host}
            header_up X-Forwarded-For {remote_host}
            header_up X-Forwarded-Proto {scheme}
            header_up X-Forwarded-Host {host}

            # Longer timeouts for API calls
            transport http {
                dial_timeout 10s
                response_header_timeout 60s
                read_timeout 120s
                write_timeout 120s
            }
        }
    }

    # Main application routes
    reverse_proxy server:3000 {
        # Health check for upstream
        health_uri /health
        health_interval 30s
        health_timeout 10s

        # Load balancing (single backend for now)
        lb_policy round_robin

        # Retry policy
        lb_try_duration 30s
        lb_try_interval 250ms

        # Headers to pass through
        header_up Host {upstream_hostport}
        header_up X-Real-IP {remote_host}
        header_up X-Forwarded-For {remote_host}
        header_up X-Forwarded-Proto {scheme}
        header_up X-Forwarded-Host {host}

        # Standard timeouts
        transport http {
            dial_timeout 10s
            response_header_timeout 30s
            read_timeout 60s
            write_timeout 60s
        }
    }

    # Error handling
    handle_errors {
        @5xx expression `{err.status_code} >= 500`
        respond @5xx "Internal Server Error" 500

        @4xx expression `{err.status_code} >= 400 && {err.status_code} < 500`
        respond @4xx "Client Error" {err.status_code}

        respond "An error occurred" 500
    }
}

# Redirect www to non-www (optional)
www.api.zapgap.tech {
    redir https://api.zapgap.tech{uri} permanent
}

# HTTP to HTTPS redirect (automatic with Caddy, but explicit for clarity)
http://api.zapgap.tech {
    redir https://api.zapgap.tech{uri} permanent
}

http://www.api.zapgap.tech {
    redir https://api.zapgap.tech{uri} permanent
}
